name: "Scan Docker Images"
on: 
  push:
    branches:
      - main

jobs:
  AWS:
    name: Despliegue en AWS
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      security-events: write
      actions: read
      contents: read

    steps:
      - name: "Obteniendo código de repositorio"
        uses: actions/checkout@v3

      - name: "Instalacion Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target
      
      - name: "Generación de imagen de docker"
        run: |
          docker build -f Dockerfile . -t webgoat/test
          docker tag webgoat/test:latest public.ecr.aws/w2x5h8r5/demo1:latest
          docker images

      - name: "Configuración de credenciales en AWS"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN }}
          aws-region: us-east-2

      - name: "Subir imagen a ECR publico"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/w2x5h8r5
          docker push public.ecr.aws/w2x5h8r5/demo1:latest
      
      - name: "Aprovisianamiento con terraform"
        run: |
          cd Terraform
          terraform init
          terraform plan -out tfplan
          terraform apply tfplan >> results_tfplan.txt
          ip_webgoat=$(cat results_tfplan.txt | grep "My_ip = " | awk '{ print $3 }' | sed 's/"//g')
      
      - name: "Ansible"
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        run: |
          sudo apt update
          sudo apt install -y ansible
          cd Ansible
          echo "$PRIVATE_KEY" >> $HOME/key.pem
          chmod 400 $HOME/key.pem
          sed -i "s/ip/$ip_webgoat/g" inventario
          ansible-playbook -i inventario server.yml --become

      - name: "Destruccion de infraestructura"
        run: |
          terraform plan -destroy -out tfplan
          terraform apply tfplan